/**
 * Telegram Bot —Å —Å–∏—Å—Ç–µ–º–æ–π –æ—á–µ—Ä–µ–¥–µ–π
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –∑–∞–º–µ–Ω—è–µ—Ç –æ–±—ã—á–Ω—ã–π index.js –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–µ–π
 */

const QueuedBot = require('./QueuedBot');

let queuedBot = null;

async function main() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –æ—á–µ—Ä–µ–¥–µ–π...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    queuedBot = new QueuedBot();
    
    // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await queuedBot.launchWithRetry();
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.once('SIGINT', async () => {
  console.log('\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT...');
  if (queuedBot) {
    await queuedBot.shutdown();
  }
  process.exit(0);
});

process.once('SIGTERM', async () => {
  console.log('\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM...');
  if (queuedBot) {
    await queuedBot.shutdown();
  }
  process.exit(0);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (reason, promise) => {
  console.error('üî• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ Promise:', reason);
  console.error('Promise:', promise);
});

process.on('uncaughtException', (error) => {
  console.error('üî• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫
main();
