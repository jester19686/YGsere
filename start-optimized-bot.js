#!/usr/bin/env node

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –æ—á–µ—Ä–µ–¥–µ–π
 */

require('dotenv').config();

const OptimizedQueuedBot = require('./server-bot/OptimizedQueuedBot');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –≤–µ—Ä—Å–∏–∏
const nodeVersion = process.version;
const majorVersion = parseInt(nodeVersion.slice(1).split('.')[0]);

if (majorVersion < 16) {
  console.error('‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 16 –∏–ª–∏ –≤—ã—à–µ');
  console.error(`   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ${nodeVersion}`);
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.TELEGRAM_BOT_TOKEN) {
  console.error('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
  console.error('   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ: TELEGRAM_BOT_TOKEN=your_bot_token');
  process.exit(1);
}

// ASCII Art –∑–∞—Å—Ç–∞–≤–∫–∞
console.log(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                              ‚ïë
‚ïë   ü§ñ OPTIMIZED TELEGRAM BOT WITH QUEUE SYSTEM üöÄ           ‚ïë
‚ïë                                                              ‚ïë
‚ïë   üìä Metrics + üõ°Ô∏è  Error Handling + ‚ö° Performance        ‚ïë
‚ïë                                                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
`);

console.log('üåü –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
console.log(`   üì¶ Node.js: ${process.version}`);
console.log(`   üñ•Ô∏è  Platform: ${process.platform} ${process.arch}`);
console.log(`   üß† Memory: ${Math.round(process.memoryUsage().heapTotal / 1024 / 1024)}MB`);
console.log(`   ‚è±Ô∏è  PID: ${process.pid}`);
console.log(`   üåç Environment: ${process.env.NODE_ENV || 'development'}`);
console.log('');

// –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function main() {
  let bot;
  
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OptimizedQueuedBot...');
    bot = new OptimizedQueuedBot();
    
    console.log('‚ö° –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º...');
    await bot.start();
    
    console.log('');
    console.log('üéâ === –°–ò–°–¢–ï–ú–ê –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–ê ===');
    console.log('');
    console.log('üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:');
    console.log(`   üìä –ì–ª–∞–≤–Ω–∞—è: http://localhost:${process.env.MONITORING_PORT || 3001}`);
    console.log(`   üìã Bull Board: http://localhost:${process.env.MONITORING_PORT || 3001}/admin/queues`);
    console.log(`   üè• Health Check: http://localhost:${process.env.MONITORING_PORT || 3001}/api/health`);
    console.log(`   üìà Prometheus: http://localhost:${process.env.MONITORING_PORT || 3001}/api/metrics`);
    console.log('');
    console.log('üìù –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:');
    console.log('   /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É');
    console.log('   /help - –°–ø—Ä–∞–≤–∫–∞');
    console.log('   /status - –°—Ç–∞—Ç—É—Å –æ—á–µ—Ä–µ–¥–µ–π');
    console.log('   /stats - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
    console.log('');
    console.log('‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
    console.log('');
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:');
    console.error(`   ${error.name}: ${error.message}`);
    
    if (process.env.NODE_ENV === 'development') {
      console.error('\nüìö Stack trace:');
      console.error(error.stack);
    }
    
    // –ü–æ–ø—ã—Ç–∫–∞ graceful shutdown –µ—Å–ª–∏ –±–æ—Ç –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (bot) {
      try {
        console.log('\nüõë –ü–æ–ø—ã—Ç–∫–∞ graceful shutdown...');
        await bot.shutdown('ERROR');
      } catch (shutdownError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ shutdown:', shutdownError.message);
      }
    }
    
    console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∑–∞–ø—É—â–µ–Ω –ª–∏ Redis: redis-cli ping');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ .env —Ñ–∞–π–ª–µ');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞');
    console.log('   4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: npm install');
    
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
  console.error('\nüí• Uncaught Exception:');
  console.error(`   ${error.name}: ${error.message}`);
  console.error('   Stack:', error.stack);
  console.error('\nüö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã...');
  process.exit(1);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('\nüí• Unhandled Promise Rejection:');
  console.error('   Reason:', reason);
  console.error('   Promise:', promise);
  console.error('\nüö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã...');
  process.exit(1);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\nüì° –ü–æ–ª—É—á–µ–Ω SIGINT (Ctrl+C)');
});

process.on('SIGTERM', () => {
  console.log('\nüì° –ü–æ–ª—É—á–µ–Ω SIGTERM');
});

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main();
